// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String      @id @default(uuid())
  product     String      @db.VarChar(255)
  name        String      @db.VarChar(255)
  description String      @db.VarChar(255)
  price       Decimal     @db.Decimal(10, 2)
  image       String
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
  orderItems  OrderItem[]

  @@map("products")
}

model Customer {
  id           String   @id @default(uuid())
  fullName     String   @db.VarChar(255)
  email        String   @unique @db.VarChar(255)
  mobile       String   @db.VarChar(255)
  document     String   @db.VarChar(255)
  zipCode      String   @db.VarChar(255)
  street       String   @db.VarChar(255)
  number       String   @db.VarChar(255)
  complement   String?  @db.VarChar(255)
  neighborhood String   @db.VarChar(255)
  city         String   @db.VarChar(255)
  state        String   @db.Char(2)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  orders       Order[]

  @@map("customers")
}

enum OrderStatus {
  PENDING
  PAID
  CANCELED
}

model Order {
  id            String      @id @default(uuid())
  status        OrderStatus @default(PENDING)
  total         Decimal     @db.Decimal(10, 2)
  transactionId String?     @db.VarChar(255)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  customer      Customer    @relation(fields: [customerId], references: [id])
  customerId    String
  orderItems    OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        String   @id @default(uuid())
  quantity  Int      @default(0)
  subTotal  Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String

  @@map("ordersItems")
}
